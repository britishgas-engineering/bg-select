{"version":3,"sources":["dummy/tests/acceptance/application-test.js","dummy/tests/acceptance/application-test.jshint.js","dummy/tests/app.jshint.js","dummy/tests/components/dummy-component.jshint.js","dummy/tests/helpers/destroy-app.js","dummy/tests/helpers/destroy-app.jshint.js","dummy/tests/helpers/module-for-acceptance.js","dummy/tests/helpers/module-for-acceptance.jshint.js","dummy/tests/helpers/resolver.js","dummy/tests/helpers/resolver.jshint.js","dummy/tests/helpers/start-app.js","dummy/tests/helpers/start-app.jshint.js","dummy/tests/integration/components/bg-option/component-test.js","dummy/tests/integration/components/bg-option/component-test.jshint.js","dummy/tests/integration/components/bg-select/component-test.js","dummy/tests/integration/components/bg-select/component-test.jshint.js","dummy/tests/resolver.jshint.js","dummy/tests/router.jshint.js","dummy/tests/routes/application.jshint.js","dummy/tests/test-helper.js","dummy/tests/test-helper.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('dummy/tests/acceptance/application-test', ['exports', 'qunit', 'dummy/tests/helpers/module-for-acceptance'], function (exports, _qunit, _dummyTestsHelpersModuleForAcceptance) {\n\n  (0, _dummyTestsHelpersModuleForAcceptance['default'])('Acceptance | application');\n\n  (0, _qunit.test)('visiting /', function (assert) {\n    visit('/');\n\n    andThen(function () {\n      fillIn('.dummy select', 'dinnye 2');\n      andThen(function () {\n        assert.equal(find('.result').text().trim(), '4');\n      });\n    });\n  });\n});","define('dummy/tests/acceptance/application-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | acceptance/application-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/application-test.js should pass jshint.');\n  });\n});","define('dummy/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('dummy/tests/components/dummy-component.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/dummy-component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/dummy-component.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('dummy/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'dummy/tests/helpers/start-app', 'dummy/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _dummyTestsHelpersStartApp, _dummyTestsHelpersDestroyApp) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _dummyTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _dummyTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('dummy/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/resolver', ['exports', 'dummy/resolver', 'dummy/config/environment'], function (exports, _dummyResolver, _dummyConfigEnvironment) {\n\n  var resolver = _dummyResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _dummyConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _dummyConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('dummy/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('dummy/tests/helpers/start-app', ['exports', 'ember', 'dummy/app', 'dummy/config/environment'], function (exports, _ember, _dummyApp, _dummyConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _dummyConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _dummyApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('dummy/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/bg-option/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('bg-option', 'Integration | Component | bg select/bg option', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('didInsertElement hook', function (assert) {\n    var _this = this;\n\n    var moackValue = 'apple';\n    expect(3);\n\n    this.on('onRegisterHandler', function (id, value) {\n      assert.equal(value, moackValue, 'should send the value of option');\n      assert.equal(_this.$('option').attr('id'), id, 'should send the id of option');\n    });\n\n    this.set('value', moackValue);\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'revision': 'Ember@2.7.3',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'bg-option', [], ['register', ['subexpr', 'action', ['onRegisterHandler'], [], ['loc', [null, [2, 26], [2, 54]]], 0, 0], 'value', ['subexpr', '@mut', [['get', 'value', ['loc', [null, [2, 61], [2, 66]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ['loc', [null, [2, 4], [4, 18]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('dummy/tests/integration/components/bg-option/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/bg-option/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/bg-option/component-test.js should pass jshint.');\n  });\n});","define('dummy/tests/integration/components/bg-select/component-test', ['exports', 'ember-qunit', 'ember'], function (exports, _emberQunit, _ember) {\n\n  (0, _emberQunit.moduleForComponent)('bg-select', 'Integration | Component | bg select', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it', function (assert) {\n\n    this.render(_ember['default'].HTMLBars.template((function () {\n      var child0 = (function () {\n        var child0 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 3,\n                  'column': 6\n                },\n                'end': {\n                  'line': 3,\n                  'column': 37\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode('label 1');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes() {\n              return [];\n            },\n            statements: [],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        var child1 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 4,\n                  'column': 6\n                },\n                'end': {\n                  'line': 4,\n                  'column': 37\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode('label 2');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes() {\n              return [];\n            },\n            statements: [],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        var child2 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 5,\n                  'column': 6\n                },\n                'end': {\n                  'line': 5,\n                  'column': 37\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode('label 3');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes() {\n              return [];\n            },\n            statements: [],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        return {\n          meta: {\n            'revision': 'Ember@2.7.3',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 6,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(3);\n            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n            morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n            morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n            return morphs;\n          },\n          statements: [['block', 'bg.option', [], ['value', '1'], 0, null, ['loc', [null, [3, 6], [3, 51]]]], ['block', 'bg.option', [], ['value', '2'], 1, null, ['loc', [null, [4, 6], [4, 51]]]], ['block', 'bg.option', [], ['value', '3'], 2, null, ['loc', [null, [5, 6], [5, 51]]]]],\n          locals: ['bg'],\n          templates: [child0, child1, child2]\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 7,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'bg-select', [], [], 0, null, ['loc', [null, [2, 4], [6, 18]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n    assert.equal(this.$('option').length, 3, 'should render the yeilded options');\n  });\n\n  (0, _emberQunit.test)('default value when using string', function (assert) {\n\n    this.render(_ember['default'].HTMLBars.template((function () {\n      var child0 = (function () {\n        var child0 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 3,\n                  'column': 6\n                },\n                'end': {\n                  'line': 3,\n                  'column': 37\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode('label 1');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes() {\n              return [];\n            },\n            statements: [],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        var child1 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 4,\n                  'column': 6\n                },\n                'end': {\n                  'line': 4,\n                  'column': 37\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode('label 2');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes() {\n              return [];\n            },\n            statements: [],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        var child2 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 5,\n                  'column': 6\n                },\n                'end': {\n                  'line': 5,\n                  'column': 37\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode('label 3');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes() {\n              return [];\n            },\n            statements: [],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        return {\n          meta: {\n            'revision': 'Ember@2.7.3',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 6,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(3);\n            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n            morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n            morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n            return morphs;\n          },\n          statements: [['block', 'bg.option', [], ['value', '1'], 0, null, ['loc', [null, [3, 6], [3, 51]]]], ['block', 'bg.option', [], ['value', '2'], 1, null, ['loc', [null, [4, 6], [4, 51]]]], ['block', 'bg.option', [], ['value', '3'], 2, null, ['loc', [null, [5, 6], [5, 51]]]]],\n          locals: ['bg'],\n          templates: [child0, child1, child2]\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 7,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'bg-select', [], ['selected', '2'], 0, null, ['loc', [null, [2, 4], [6, 18]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$('option:selected').index(), 1, 'should select the required 2nd element');\n  });\n\n  (0, _emberQunit.test)('default value when using number', function (assert) {\n\n    this.render(_ember['default'].HTMLBars.template((function () {\n      var child0 = (function () {\n        var child0 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 3,\n                  'column': 6\n                },\n                'end': {\n                  'line': 3,\n                  'column': 35\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode('label 1');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes() {\n              return [];\n            },\n            statements: [],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        var child1 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 4,\n                  'column': 6\n                },\n                'end': {\n                  'line': 4,\n                  'column': 35\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode('label 2');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes() {\n              return [];\n            },\n            statements: [],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        var child2 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 5,\n                  'column': 6\n                },\n                'end': {\n                  'line': 5,\n                  'column': 35\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode('label 3');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes() {\n              return [];\n            },\n            statements: [],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        return {\n          meta: {\n            'revision': 'Ember@2.7.3',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 6,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(3);\n            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n            morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n            morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n            return morphs;\n          },\n          statements: [['block', 'bg.option', [], ['value', 1], 0, null, ['loc', [null, [3, 6], [3, 49]]]], ['block', 'bg.option', [], ['value', 2], 1, null, ['loc', [null, [4, 6], [4, 49]]]], ['block', 'bg.option', [], ['value', 3], 2, null, ['loc', [null, [5, 6], [5, 49]]]]],\n          locals: ['bg'],\n          templates: [child0, child1, child2]\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 7,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'bg-select', [], ['selected', 3], 0, null, ['loc', [null, [2, 4], [6, 18]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$('option:selected').index(), 2, 'should select the required 3rd element');\n  });\n\n  (0, _emberQunit.test)('default value when using POJOs', function (assert) {\n    var values = [{\n      label: 'label 1',\n      aProp: 'abc'\n    }, {\n      label: 'label 2',\n      aProp: 'abcd'\n    }, {\n      label: 'label 3',\n      aProp: 'abcde'\n    }];\n    this.set('values', values);\n\n    this.set('selected', values[1]);\n\n    this.render(_ember['default'].HTMLBars.template((function () {\n      var child0 = (function () {\n        var child0 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 3,\n                  'column': 6\n                },\n                'end': {\n                  'line': 3,\n                  'column': 57\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment('');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var morphs = new Array(1);\n              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n              dom.insertBoundary(fragment, 0);\n              dom.insertBoundary(fragment, null);\n              return morphs;\n            },\n            statements: [['content', 'values.0.label', ['loc', [null, [3, 37], [3, 57]]], 0, 0, 0, 0]],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        var child1 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 4,\n                  'column': 6\n                },\n                'end': {\n                  'line': 4,\n                  'column': 57\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment('');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var morphs = new Array(1);\n              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n              dom.insertBoundary(fragment, 0);\n              dom.insertBoundary(fragment, null);\n              return morphs;\n            },\n            statements: [['content', 'values.1.label', ['loc', [null, [4, 37], [4, 57]]], 0, 0, 0, 0]],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        var child2 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 5,\n                  'column': 6\n                },\n                'end': {\n                  'line': 5,\n                  'column': 57\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment('');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var morphs = new Array(1);\n              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n              dom.insertBoundary(fragment, 0);\n              dom.insertBoundary(fragment, null);\n              return morphs;\n            },\n            statements: [['content', 'values.2.label', ['loc', [null, [5, 37], [5, 57]]], 0, 0, 0, 0]],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        return {\n          meta: {\n            'revision': 'Ember@2.7.3',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 6,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(3);\n            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n            morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n            morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n            return morphs;\n          },\n          statements: [['block', 'bg.option', [], ['value', ['subexpr', '@mut', [['get', 'values.0', ['loc', [null, [3, 25], [3, 35]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ['loc', [null, [3, 6], [3, 71]]]], ['block', 'bg.option', [], ['value', ['subexpr', '@mut', [['get', 'values.1', ['loc', [null, [4, 25], [4, 35]]], 0, 0, 0, 0]], [], [], 0, 0]], 1, null, ['loc', [null, [4, 6], [4, 71]]]], ['block', 'bg.option', [], ['value', ['subexpr', '@mut', [['get', 'values.2', ['loc', [null, [5, 25], [5, 35]]], 0, 0, 0, 0]], [], [], 0, 0]], 2, null, ['loc', [null, [5, 6], [5, 71]]]]],\n          locals: ['bg'],\n          templates: [child0, child1, child2]\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 7,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'bg-select', [], ['selected', ['subexpr', '@mut', [['get', 'selected', ['loc', [null, [2, 26], [2, 34]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ['loc', [null, [2, 4], [6, 18]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$('option:selected').index(), 1, 'should select the required 2nd element');\n  });\n\n  (0, _emberQunit.test)('default value when using Ember.Object', function (assert) {\n    var values = [_ember['default'].Object.create({\n      label: 'label 1',\n      aProp: 'abc'\n    }), _ember['default'].Object.create({\n      label: 'label 2',\n      aProp: 'abcd'\n    }), _ember['default'].Object.create({\n      label: 'label 3',\n      aProp: 'abcde'\n    })];\n    this.set('values', values);\n\n    this.set('selected', _ember['default'].Object.create({\n      label: 'label 3',\n      aProp: 'abcde'\n    }));\n\n    this.render(_ember['default'].HTMLBars.template((function () {\n      var child0 = (function () {\n        var child0 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 3,\n                  'column': 6\n                },\n                'end': {\n                  'line': 3,\n                  'column': 57\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment('');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var morphs = new Array(1);\n              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n              dom.insertBoundary(fragment, 0);\n              dom.insertBoundary(fragment, null);\n              return morphs;\n            },\n            statements: [['content', 'values.0.label', ['loc', [null, [3, 37], [3, 57]]], 0, 0, 0, 0]],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        var child1 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 4,\n                  'column': 6\n                },\n                'end': {\n                  'line': 4,\n                  'column': 57\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment('');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var morphs = new Array(1);\n              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n              dom.insertBoundary(fragment, 0);\n              dom.insertBoundary(fragment, null);\n              return morphs;\n            },\n            statements: [['content', 'values.1.label', ['loc', [null, [4, 37], [4, 57]]], 0, 0, 0, 0]],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        var child2 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 5,\n                  'column': 6\n                },\n                'end': {\n                  'line': 5,\n                  'column': 57\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment('');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var morphs = new Array(1);\n              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n              dom.insertBoundary(fragment, 0);\n              dom.insertBoundary(fragment, null);\n              return morphs;\n            },\n            statements: [['content', 'values.2.label', ['loc', [null, [5, 37], [5, 57]]], 0, 0, 0, 0]],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        return {\n          meta: {\n            'revision': 'Ember@2.7.3',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 6,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(3);\n            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n            morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n            morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n            return morphs;\n          },\n          statements: [['block', 'bg.option', [], ['value', ['subexpr', '@mut', [['get', 'values.0', ['loc', [null, [3, 25], [3, 35]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ['loc', [null, [3, 6], [3, 71]]]], ['block', 'bg.option', [], ['value', ['subexpr', '@mut', [['get', 'values.1', ['loc', [null, [4, 25], [4, 35]]], 0, 0, 0, 0]], [], [], 0, 0]], 1, null, ['loc', [null, [4, 6], [4, 71]]]], ['block', 'bg.option', [], ['value', ['subexpr', '@mut', [['get', 'values.2', ['loc', [null, [5, 25], [5, 35]]], 0, 0, 0, 0]], [], [], 0, 0]], 2, null, ['loc', [null, [5, 6], [5, 71]]]]],\n          locals: ['bg'],\n          templates: [child0, child1, child2]\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 7,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'bg-select', [], ['selected', ['subexpr', '@mut', [['get', 'selected', ['loc', [null, [2, 26], [2, 34]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ['loc', [null, [2, 4], [6, 18]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$('option:selected').index(), 2, 'should select the required 3rd element');\n  });\n\n  // interacting with the component\n  (0, _emberQunit.test)('selecting 2nd element using strings', function (assert) {\n\n    expect(1);\n\n    this.on('onChangeHandler', function (selectedValue) {\n      assert.equal(selectedValue, 2, 'should return 2nd element value');\n    });\n\n    this.render(_ember['default'].HTMLBars.template((function () {\n      var child0 = (function () {\n        var child0 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 3,\n                  'column': 6\n                },\n                'end': {\n                  'line': 3,\n                  'column': 37\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode('label 1');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes() {\n              return [];\n            },\n            statements: [],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        var child1 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 4,\n                  'column': 6\n                },\n                'end': {\n                  'line': 4,\n                  'column': 37\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode('label 2');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes() {\n              return [];\n            },\n            statements: [],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        var child2 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 5,\n                  'column': 6\n                },\n                'end': {\n                  'line': 5,\n                  'column': 37\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createTextNode('label 3');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes() {\n              return [];\n            },\n            statements: [],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        return {\n          meta: {\n            'revision': 'Ember@2.7.3',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 6,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(3);\n            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n            morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n            morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n            return morphs;\n          },\n          statements: [['block', 'bg.option', [], ['value', '1'], 0, null, ['loc', [null, [3, 6], [3, 51]]]], ['block', 'bg.option', [], ['value', '2'], 1, null, ['loc', [null, [4, 6], [4, 51]]]], ['block', 'bg.option', [], ['value', '3'], 2, null, ['loc', [null, [5, 6], [5, 51]]]]],\n          locals: ['bg'],\n          templates: [child0, child1, child2]\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 7,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'bg-select', [], ['onChangeHandler', ['subexpr', 'action', ['onChangeHandler'], [], ['loc', [null, [2, 33], [2, 59]]], 0, 0]], 0, null, ['loc', [null, [2, 4], [6, 18]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    this.$('select').val('label 2').trigger('change');\n  });\n\n  // interacting with the component\n  (0, _emberQunit.test)('selecting 2nd element using POJOs', function (assert) {\n    var values = [{\n      label: 'label 1',\n      aProp: 'abc'\n    }, {\n      label: 'label 2',\n      aProp: 'abcd'\n    }, {\n      label: 'label 3',\n      aProp: 'abcde'\n    }];\n\n    expect(1);\n    this.on('onChangeHandler', function (selectedValue) {\n      assert.deepEqual(selectedValue, values[1]);\n    });\n\n    this.set('values', values);\n\n    this.render(_ember['default'].HTMLBars.template((function () {\n      var child0 = (function () {\n        var child0 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 3,\n                  'column': 6\n                },\n                'end': {\n                  'line': 3,\n                  'column': 57\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment('');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var morphs = new Array(1);\n              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n              dom.insertBoundary(fragment, 0);\n              dom.insertBoundary(fragment, null);\n              return morphs;\n            },\n            statements: [['content', 'values.0.label', ['loc', [null, [3, 37], [3, 57]]], 0, 0, 0, 0]],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        var child1 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 4,\n                  'column': 6\n                },\n                'end': {\n                  'line': 4,\n                  'column': 57\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment('');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var morphs = new Array(1);\n              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n              dom.insertBoundary(fragment, 0);\n              dom.insertBoundary(fragment, null);\n              return morphs;\n            },\n            statements: [['content', 'values.1.label', ['loc', [null, [4, 37], [4, 57]]], 0, 0, 0, 0]],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        var child2 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 5,\n                  'column': 6\n                },\n                'end': {\n                  'line': 5,\n                  'column': 57\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment('');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var morphs = new Array(1);\n              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n              dom.insertBoundary(fragment, 0);\n              dom.insertBoundary(fragment, null);\n              return morphs;\n            },\n            statements: [['content', 'values.2.label', ['loc', [null, [5, 37], [5, 57]]], 0, 0, 0, 0]],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        return {\n          meta: {\n            'revision': 'Ember@2.7.3',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 6,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(3);\n            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n            morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n            morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n            return morphs;\n          },\n          statements: [['block', 'bg.option', [], ['value', ['subexpr', '@mut', [['get', 'values.0', ['loc', [null, [3, 25], [3, 35]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ['loc', [null, [3, 6], [3, 71]]]], ['block', 'bg.option', [], ['value', ['subexpr', '@mut', [['get', 'values.1', ['loc', [null, [4, 25], [4, 35]]], 0, 0, 0, 0]], [], [], 0, 0]], 1, null, ['loc', [null, [4, 6], [4, 71]]]], ['block', 'bg.option', [], ['value', ['subexpr', '@mut', [['get', 'values.2', ['loc', [null, [5, 25], [5, 35]]], 0, 0, 0, 0]], [], [], 0, 0]], 2, null, ['loc', [null, [5, 6], [5, 71]]]]],\n          locals: ['bg'],\n          templates: [child0, child1, child2]\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 7,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'bg-select', [], ['onChangeHandler', ['subexpr', 'action', ['onChangeHandler'], [], ['loc', [null, [2, 33], [2, 59]]], 0, 0]], 0, null, ['loc', [null, [2, 4], [6, 18]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    this.$('select').val('label 2').trigger('change');\n  });\n\n  // interacting with the component\n  (0, _emberQunit.test)('selecting 2nd element using Ember Object', function (assert) {\n    var values = [_ember['default'].Object.create({\n      label: 'label 1',\n      aProp: 'abc'\n    }), _ember['default'].Object.create({\n      label: 'label 2',\n      aProp: 'abcd'\n    }), _ember['default'].Object.create({\n      label: 'label 3',\n      aProp: 'abcde'\n    })];\n\n    expect(1);\n    this.on('onChangeHandler', function (selectedValue) {\n      assert.deepEqual(selectedValue, values[1]);\n    });\n\n    this.set('values', values);\n\n    this.render(_ember['default'].HTMLBars.template((function () {\n      var child0 = (function () {\n        var child0 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 3,\n                  'column': 6\n                },\n                'end': {\n                  'line': 3,\n                  'column': 57\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment('');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var morphs = new Array(1);\n              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n              dom.insertBoundary(fragment, 0);\n              dom.insertBoundary(fragment, null);\n              return morphs;\n            },\n            statements: [['content', 'values.0.label', ['loc', [null, [3, 37], [3, 57]]], 0, 0, 0, 0]],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        var child1 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 4,\n                  'column': 6\n                },\n                'end': {\n                  'line': 4,\n                  'column': 57\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment('');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var morphs = new Array(1);\n              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n              dom.insertBoundary(fragment, 0);\n              dom.insertBoundary(fragment, null);\n              return morphs;\n            },\n            statements: [['content', 'values.1.label', ['loc', [null, [4, 37], [4, 57]]], 0, 0, 0, 0]],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        var child2 = (function () {\n          return {\n            meta: {\n              'revision': 'Ember@2.7.3',\n              'loc': {\n                'source': null,\n                'start': {\n                  'line': 5,\n                  'column': 6\n                },\n                'end': {\n                  'line': 5,\n                  'column': 57\n                }\n              }\n            },\n            isEmpty: false,\n            arity: 0,\n            cachedFragment: null,\n            hasRendered: false,\n            buildFragment: function buildFragment(dom) {\n              var el0 = dom.createDocumentFragment();\n              var el1 = dom.createComment('');\n              dom.appendChild(el0, el1);\n              return el0;\n            },\n            buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n              var morphs = new Array(1);\n              morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n              dom.insertBoundary(fragment, 0);\n              dom.insertBoundary(fragment, null);\n              return morphs;\n            },\n            statements: [['content', 'values.2.label', ['loc', [null, [5, 37], [5, 57]]], 0, 0, 0, 0]],\n            locals: [],\n            templates: []\n          };\n        })();\n\n        return {\n          meta: {\n            'revision': 'Ember@2.7.3',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 6,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 1,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n      ');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createComment('');\n            dom.appendChild(el0, el1);\n            var el1 = dom.createTextNode('\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n            var morphs = new Array(3);\n            morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n            morphs[1] = dom.createMorphAt(fragment, 3, 3, contextualElement);\n            morphs[2] = dom.createMorphAt(fragment, 5, 5, contextualElement);\n            return morphs;\n          },\n          statements: [['block', 'bg.option', [], ['value', ['subexpr', '@mut', [['get', 'values.0', ['loc', [null, [3, 25], [3, 35]]], 0, 0, 0, 0]], [], [], 0, 0]], 0, null, ['loc', [null, [3, 6], [3, 71]]]], ['block', 'bg.option', [], ['value', ['subexpr', '@mut', [['get', 'values.1', ['loc', [null, [4, 25], [4, 35]]], 0, 0, 0, 0]], [], [], 0, 0]], 1, null, ['loc', [null, [4, 6], [4, 71]]]], ['block', 'bg.option', [], ['value', ['subexpr', '@mut', [['get', 'values.2', ['loc', [null, [5, 25], [5, 35]]], 0, 0, 0, 0]], [], [], 0, 0]], 2, null, ['loc', [null, [5, 6], [5, 71]]]]],\n          locals: ['bg'],\n          templates: [child0, child1, child2]\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 7,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'bg-select', [], ['onChangeHandler', ['subexpr', 'action', ['onChangeHandler'], [], ['loc', [null, [2, 33], [2, 59]]], 0, 0]], 0, null, ['loc', [null, [2, 4], [6, 18]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    this.$('select').val('label 2').trigger('change');\n  });\n});","define('dummy/tests/integration/components/bg-select/component-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/bg-select/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/bg-select/component-test.js should pass jshint.');\n  });\n});","define('dummy/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('dummy/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('dummy/tests/routes/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass jshint.');\n  });\n});","define('dummy/tests/test-helper', ['exports', 'dummy/tests/helpers/resolver', 'ember-qunit'], function (exports, _dummyTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_dummyTestsHelpersResolver['default']);\n});","define('dummy/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('dummy/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}