"use strict";define("dummy/app",["exports","ember","dummy/resolver","ember-load-initializers","dummy/config/environment"],function(e,t,n,l,a){var i=void 0;t.default.MODEL_FACTORY_INJECTIONS=!0,i=t.default.Application.extend({modulePrefix:a.default.modulePrefix,podModulePrefix:a.default.podModulePrefix,Resolver:n.default}),(0,l.default)(i,a.default.modulePrefix),e.default=i}),define("dummy/components/bg-option/component",["exports","bg-select/components/bg-option/component"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/bg-select/component",["exports","bg-select/components/bg-select/component"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/components/dummy-component",["exports","ember"],function(e,t){e.default=t.default.Component.extend({classNames:["dummy"],init:function(){this._super.apply(this,arguments),this.set("result",JSON.stringify(this.get("model.defaultValue")))},result:null,actions:{onChangeHandler:function(e){this.set("result",JSON.stringify(e))}}})}),define("dummy/helpers/app-version",["exports","ember","dummy/config/environment"],function(e,t,n){function l(){return a}e.appVersion=l;var a=n.default.APP.version;e.default=t.default.Helper.helper(l)}),define("dummy/helpers/pluralize",["exports","ember-inflector/lib/helpers/pluralize"],function(e,t){e.default=t.default}),define("dummy/helpers/singularize",["exports","ember-inflector/lib/helpers/singularize"],function(e,t){e.default=t.default}),define("dummy/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","dummy/config/environment"],function(e,t,n){var l=n.default.APP,a=l.name,i=l.version;e.default={name:"App Version",initialize:(0,t.default)(a,i)}}),define("dummy/initializers/container-debug-adapter",["exports","ember-resolver/container-debug-adapter"],function(e,t){e.default={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0];e.register("container-debug-adapter:main",t.default),e.inject("container-debug-adapter:main","namespace","application:main")}}}),define("dummy/initializers/data-adapter",["exports","ember"],function(e,t){e.default={name:"data-adapter",before:"store",initialize:function(){}}}),define("dummy/initializers/ember-data",["exports","ember-data/setup-container","ember-data/-private/core"],function(e,t,n){e.default={name:"ember-data",initialize:t.default}}),define("dummy/initializers/export-application-global",["exports","ember","dummy/config/environment"],function(e,t,n){function l(){var e=arguments[1]||arguments[0];if(n.default.exportApplicationGlobal!==!1){var l;if("undefined"!=typeof window)l=window;else if("undefined"!=typeof global)l=global;else{if("undefined"==typeof self)return;l=self}var a,i=n.default.exportApplicationGlobal;a="string"==typeof i?i:t.default.String.classify(n.default.modulePrefix),l[a]||(l[a]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete l[a]}}))}}e.initialize=l,e.default={name:"export-application-global",initialize:l}}),define("dummy/initializers/injectStore",["exports","ember"],function(e,t){e.default={name:"injectStore",before:"store",initialize:function(){}}}),define("dummy/initializers/store",["exports","ember"],function(e,t){e.default={name:"store",after:"ember-data",initialize:function(){}}}),define("dummy/initializers/transforms",["exports","ember"],function(e,t){e.default={name:"transforms",before:"store",initialize:function(){}}}),define("dummy/instance-initializers/ember-data",["exports","ember-data/-private/instance-initializers/initialize-store-service"],function(e,t){e.default={name:"ember-data",initialize:t.default}}),define("dummy/resolver",["exports","ember-resolver"],function(e,t){e.default=t.default}),define("dummy/router",["exports","ember","dummy/config/environment"],function(e,t,n){var l=t.default.Router.extend({location:n.default.locationType,rootURL:n.default.rootURL});l.map(function(){}),e.default=l}),define("dummy/routes/application",["exports","ember"],function(e,t){e.default=t.default.Route.extend({model:function(){return{array1:[t.default.Object.create({id:1,label:"yellow"}),t.default.Object.create({id:2,label:"green"}),t.default.Object.create({id:12,label:"red"})],defaultValue:t.default.Object.create({id:2,label:"green"})}}})}),define("dummy/services/ajax",["exports","ember-ajax/services/ajax"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t.default}})}),define("dummy/templates/application",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"k2j1ESHL",block:'{"statements":[["text","\\n"],["open-element","div",[]],["static-attr","class","container"],["flush-element"],["text","\\n  "],["append",["helper",["dummy-component"],null,[["model"],[["get",["model"]]]]],false],["text","\\n"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[],"hasPartials":false}',meta:{moduleName:"dummy/templates/application.hbs"}})}),define("dummy/templates/components/dummy-component",["exports"],function(e){e.default=Ember.HTMLBars.template({id:"+zspAdy1",block:'{"statements":[["open-element","div",[]],["flush-element"],["text","\\n  "],["open-element","h1",[]],["flush-element"],["text","Example 1 working with objects"],["close-element"],["text","\\n  "],["open-element","p",[]],["flush-element"],["text","\\n    In this example the seed is:\\n  "],["close-element"],["text","\\n\\n  "],["open-element","pre",[]],["flush-element"],["text","\\n    model = {\\n      array1 = [{\\n        id: 1,\\n        label: \'yellow\'\\n      }, {\\n        id: 2,\\n        label: \'green\'\\n      }, {\\n        id: 12,\\n        label: \'red\'\\n      }],\\n      // just to make a twist it is Ember.Object\\n      defaultValue: Ember.Object.create({id: 12, label: \'red\'})\\n    }\\n  "],["close-element"],["text","\\n\\n  "],["open-element","div",[]],["flush-element"],["text","\\n    "],["open-element","h3",[]],["flush-element"],["text","Handlebar (FYI: the value is the object)"],["close-element"],["text","\\n  "],["close-element"],["text","\\n  "],["open-element","pre",[]],["flush-element"],["text","\\n    {{#bg-select selected=model.defaultValue as |bg|}}\\n      {{#bg.option value=\\"\\"}}Select one{{/bg.option}}\\n      {{#each model.array1 as |obj|}}\\n        {{#bg.option value=obj}}{{obj.label}}{{/bg.option}}\\n      {{/each}}\\n    {{/bg-select}}\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","div",[]],["static-attr","class","row"],["flush-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","col-xs-3"],["flush-element"],["text","\\n"],["block",["bg-select"],null,[["class","onSelectChange","selected"],["form-control",["helper",["action"],[["get",[null]],"onChangeHandler"],null],["get",["model","defaultValue"]]]],3],["text","  "],["close-element"],["text","\\n  "],["open-element","div",[]],["static-attr","class","col-xs-3"],["flush-element"],["text","\\n      Result:\\n\\n      "],["open-element","code",[]],["static-attr","class","result"],["flush-element"],["append",["unknown",["result"]],false],["close-element"],["text","\\n  "],["close-element"],["text","\\n"],["close-element"],["text","\\n"],["open-element","hr",[]],["flush-element"],["close-element"],["text","\\n"]],"locals":[],"named":[],"yields":[],"blocks":[{"statements":[["append",["unknown",["el","label"]],false]],"locals":[]},{"statements":[["text","    "],["block",["bg","option"],null,[["value"],[["get",["el"]]]],0],["text","\\n"]],"locals":["el"]},{"statements":[["text","Select one"]],"locals":[]},{"statements":[["text","    "],["block",["bg","option"],null,[["value"],[""]],2],["text","\\n"],["block",["each"],[["get",["model","array1"]]],null,1]],"locals":["bg"]}],"hasPartials":false}',meta:{moduleName:"dummy/templates/components/dummy-component.hbs"}})}),define("dummy/config/environment",["ember"],function(e){var t="dummy";try{var n=t+"/config/environment",l=document.querySelector('meta[name="'+n+'"]').getAttribute("content"),a=JSON.parse(unescape(l)),i={default:a};return Object.defineProperty(i,"__esModule",{value:!0}),i}catch(e){throw new Error('Could not read config from meta tag with name "'+n+'".')}}),runningTests||require("dummy/app").default.create({name:"bg-select",version:"0.0.3+e3aca3a1"});